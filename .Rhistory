scale_color_gradient(low = "green",
high = "red")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label))+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
rndtimes <- tibble(hour = sample(x = 0:23, size = 100, prob = 24:1, replace = TRUE),
minute = sample(x = 0:59, size = 100, replace = TRUE)) %>%
unite("time", hour:minute, sep = ":") # since 14:30 types
rndtimes <- rndtimes %>%
separate(time, into = c("hour", "minute"), remove = FALSE) %>% # Separate minute
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(rndtimes)[1]),
y0 = rep(0, dim(rndtimes)[1]),
crit = sample(300))
rndtimes %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = crit))+
scale_color_gradient(low = "green",
high = "red")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label))+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
rndtimes <- rndtimes %>%
separate(time, into = c("hour", "minute"), remove = FALSE) %>% # Separate minute
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(rndtimes)[1]),
y0 = rep(0, dim(rndtimes)[1]),
crit = sample(100))
rndtimes %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = crit))+
scale_color_gradient(low = "green",
high = "red")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label))+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
time24 <- sample(0:60, 50, replace = TRUE, prob = c(0.1,0.2))+
sample(0:23, 50, replace = TRUE)*100
df <- tibble(time = time24,
crit = sample(1:20, length(time24), replace = TRUE))
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>% mutate(time = {{time}}/100) %>%
separate(time, into = c("hour", "minute")) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "red")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label,
inherit.aes = FALSE))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
}
View(rndtimes)
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>%
separate(time, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "red")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label,
inherit.aes = FALSE))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
}
data_clock(data = rndtimes, time = time, criteria = crit)
size = 50
rndtimes <- tibble(hour = sample(x = 0:23, size = size, prob = 24:1, replace = TRUE),
minute = sample(x = 0:59, size = size, replace = TRUE)) %>%
unite("time", hour:minute, sep = ":") %>%  # since 14:30 types
mutate(crit = sample(size))
data_clock(data = rndtimes, time = time, criteria = crit)
dfclock
dfclock <- tibble(time = times,
hour = c(6:12, 1:5),
label = paste0(hour, ampm))
ampm
c(6:12, 1:5)
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
dfclock
View(dfclock)
c(6:12, 1:12, 1:5)
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
dfclock <- tibble(time = times,
hour = c(6:12, 1:12, 1:5),
label = paste0(c(6:12, 1:5), ampm))
View(dfclock)
rndtimes %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = crit))+
scale_color_gradient(low = "green",
high = "blue")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label))+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
rndtimes <- rndtimes %>%
separate(time, into = c("hour", "minute"), remove = FALSE) %>% # Separate minute
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(rndtimes)[1]),
y0 = rep(0, dim(rndtimes)[1]))
rndtimes %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = crit))+
scale_color_gradient(low = "green",
high = "blue")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label))+
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
train_scd <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vSyOneCWtpz6XXliHwftRy6DcdIfnfh2gmEXrC7NQluSqZh-qHpvZ4tosMTsPgpH-p86pf15uaWAuRV/pub?gid=0&single=true&output=csv")
View(train_scd)
library(stringr)
train_scd <- train_scd %>% mutate(Departure = str_remove(Departure, ":00"))
data_clock(data = train_scd, time = Departure, criteria = Origin)
size = 50
rndtimes <- tibble(hour = sample(x = 0:23, size = size, prob = 24:1, replace = TRUE),
minute = sample(x = 0:59, size = size, replace = TRUE)) %>%
unite("Time", hour:minute, sep = ":") %>%  # since 14:30 types
mutate(crit = sample(size))
View(rndtimes)
data_clock(data = rndtimes, time = time, criteria = crit)
data_clock(data = rndtimes, time = Time, criteria = crit)
rndtimes
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>%
separate({{time}}, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "red")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label,
inherit.aes = FALSE))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
}
data_clock(data = rndtimes, time = Time, criteria = crit)
# data preparation
dt <- data %>%
separate({{time}}, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>%
separate({{time}}, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "blue")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label,
inherit.aes = FALSE))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
}
data_clock(data = rndtimes, time = Time, criteria = crit)
data_clock(data = train_scd, time = Departure, criteria = Origin)
data_clock(data = train_scd, time = Departure, criteria = Train_no)
data_clock(data = train_scd %>% filter(Origin == "Dhaka"),
time = Departure, criteria = Train_no)
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>%
separate({{time}}, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
myclock <- dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "blue")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label,
inherit.aes = FALSE))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
return(myclock)
}
data_clock(data = train_scd %>% filter(Origin == "Dhaka"),
time = Departure, criteria = Train_no)
myclock
myclock <- data_clock(data = rndtimes, time = Time, criteria = crit)
myclock
myclock + labs(title = "Bangladesh Railway")
myclock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka")
train_clock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka)")
train_clock <- data_clock(data = train_scd %>% filter(Origin == "Dhaka"),
time = Departure, criteria = Train_no)
train_clock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka)")
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>%
separate({{time}}, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
myclock <- dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, linetype = "dashed", color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "blue")+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label,
inherit.aes = FALSE))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
return(myclock) # Store clock to use outside the function
}
train_clock <- data_clock(data = train_scd %>% filter(Origin == "Dhaka"),
time = Departure, criteria = Train_no)
train_clock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka)")
library(tidyverse)
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
dfclock <- tibble(time = times,
hour = c(6:12, 1:12, 1:5),
label = paste0(c(6:12, 1:5), ampm))
dfclock %>%
geom_point(aes(Re(time), Im(time), label = label))
dfclock %>%
geom_point(aes(Re(time), Im(time)))
dfclock %>% ggplot()
dfclock
geom_point(aes(Re(time), Im(time)))+
geom_text(data = dfclock,
aes(Re(time), Im(time), label = label))
dfclock %>% ggplot()+
geom_point(aes(Re(time), Im(time)))
train_clock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka)")+
geom_point(data = dfclock, aes(Re(time), Im(time)))
dfclock
train_clock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka)")+
geom_point(data = dfclock, aes(Re(time)*1.1, 1.1*Im(time)))
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)))
data_clock <- function(data, time, criteria){
# data preparation
dt <- data %>%
separate({{time}}, into = c("hour", "minute"), remove = FALSE) %>%
mutate(minute = as.numeric(ifelse(is.na(minute),0,minute)),
minute = ifelse(minute<10, minute * 5/30, minute * 5/300),
hour = as.numeric(hour),
timc = hour+minute,
time_angle = ifelse(0<=timc & timc<=6,
(6-timc)*pi/12,
(30-timc)*pi/12),
x1 = cos(time_angle)*.9,
y1 = sin(time_angle)*.9,
x0 = rep(0, dim(data)[1]),
y0 = rep(0, dim(data)[1]))
## Clock preparation
ampm = c(rep(" AM",6), rep(" PM",12), rep(" AM",6))
k <- 24
times <- exp(1i * 2 * pi * (k:1) / k)
dfclock <- tibble(time = times,
label = paste0(c(6:12, 1:5), ampm))
# Plot
myclock <- dt %>% ggplot(aes(x0,y0))+
geom_segment(aes(xend = x1, yend = y1, color = {{criteria}}))+
scale_color_gradient(low = "green",
high = "blue")+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(data = dfclock, aes(Re(time), Im(time)))+ #
labs(x = "", y = "")+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
legend.position = "none")
return(myclock) # Store clock to use outside the function
}
train_clock <- data_clock(data = train_scd %>% filter(Origin == "Dhaka"),
time = Departure, criteria = Train_no)
train_clock
train_clock + labs(title = "Bangladesh Railway Train Schedule (Departing from Dhaka)")+
geom_point(data = dfclock, aes(Re(time), Im(time)))
train_clock <- data_clock(data = train_scd %>% filter(Origin == "Dhaka"),
time = Departure, criteria = Train_no)
train_clock
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)))
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 25)
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 19)
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 19, color = "red")
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 19, color = "red", size = 3)
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 19, color = "red", size = 2)
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = "|", color = "red", size = 2)
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 19, color = "red", size = 2)
dfclock %>% ggplot()+
geom_text(data = dfclock, aes(Re(time)*1.1, Im(time)*1.1, label = label))+
geom_point(aes(Re(time), Im(time)), shape = 19, color = "red", size = 1.5)
library(ggplot2)
getwd()
tinytex::parse_install(
text = "! LaTeX Error: File `gfsdidot.sty' not found."
)
tinytex::parse_install(
text = "! LaTeX Error: File `pxfonts.sty' not found."
)
tinytex::tlmgr_install('cbfonts-fd')
tinytex::tlmgr_install('texlive-greek-fontenc')
tinytex::parse_install(
text = "I can't find the lgrenc.def file for the Greek fonts"
)
tinytex::tlmgr_install('greek-fontenc')
tinytex::parse_install(
text = "! LaTeX Error: File `microtype.sty' not found."
)
